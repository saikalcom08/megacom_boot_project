from decouple import config
import telebot
from telebot import types

bot = telebot.TeleBot(config("TOKEN_BOT"))

@bot.message_handler(commands = ["start", ])
def get_started(message):
    text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Å –≤–∞–º–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –ö—É—Ç. \n–ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?"
    murkup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(text="–¢–µ–ª–µ—Ñ–æ–Ω‚òéÔ∏è")
    btn2 = types.KeyboardButton(text="üìç –ê–¥—Ä–µ—Åüó∫")
    btn3 = types.KeyboardButton(text="–°–∞–π—Çüìß")
    btn4 = types.KeyboardButton(text="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ãüïñ")
    btn5 = types.KeyboardButton(text="–û–±—ä–µ–∫—Ç—ã üè†")
    btn6 = types.KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üìù")
    murkup_reply.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(message.chat.id, text, reply_markup=murkup_reply)

@bot.message_handler(func=lambda message: message.text == "–¢–µ–ª–µ—Ñ–æ–Ω‚òéÔ∏è" or message.text == "üìç –ê–¥—Ä–µ—Åüó∫"
                                          or message.text == "–°–∞–π—Çüìß" or message.text == "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ãüïñ"
                                          or message.text == "–û–±—ä–µ–∫—Ç—ã üè†" or message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üìù")
def send_answer(message):
    if message.text == "–¢–µ–ª–µ—Ñ–æ–Ω‚òéÔ∏è":
        text = "üìûÔ∏è  <b>+996 557‚Äì00‚Äì99‚Äì00 \nüìûÔ∏è  +996 507‚Äì00‚Äì99‚Äì00</b>"
        bot.send_message(message.chat.id, text, parse_mode='HTML')
    elif message.text == "üìç –ê–¥—Ä–µ—Åüó∫":
        murkup_in = types.InlineKeyboardMarkup()
        text1 = "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª:"
        btn1 = types.InlineKeyboardButton(text="1-—ã–π —Ñ–∏–ª–∏–∞–ª", callback_data="1-—ã–π —Ñ–∏–ª–∏–∞–ª")
        btn2 = types.InlineKeyboardButton(text="2-–æ–π —Ñ–∏–ª–∏–∞–ª", callback_data="2-–æ–π —Ñ–∏–ª–∏–∞–ª")
        murkup_in.add(btn1, btn2)
        bot.send_message(message.chat.id, text1, reply_markup=murkup_in)
    elif message.text == "–°–∞–π—Çüìß":
        text = "https://kutstroy.kg"
        bot.send_message(message.chat.id, text)
    elif message.text == "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ãüïñ":
        text = "<b>ü§µ –ü–ù-–ü–¢ \n‚è± 09:00 - 19:00</b>"
        bot.send_message(message.chat.id, text, parse_mode='HTML')
    elif message.text == "–û–±—ä–µ–∫—Ç—ã üè†":
        text = 'üè† –í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç:'
        markup_in = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="–ö—É—Ç –ü–∞—Ä–∫", callback_data="kut_park")
        btn2 = types.InlineKeyboardButton(text="–£–º—É—Ç", callback_data="umut")
        btn3 = types.InlineKeyboardButton(text="–ê–∫ –ù–∏–µ—Ç", callback_data="ak_niet")
        btn4 = types.InlineKeyboardButton(text="–ö—É—Ç –û—Ä–≥–æ", callback_data="kut_orgo")
        markup_in.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, text, reply_markup=markup_in)
    elif message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üìù":
        chat_id = -571655150
        text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:" \
               "\n<b>–§–ò–û:</b>" \
               "\n<b>–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>" \
               "\n<b>–í–∞—à email:</b>"
        bot.send_message(message.chat.id, text, parse_mode="HTML")
        bot.send_message(chat_id, text, parse_mode="HTML")

@bot.message_handler(content_types=['text'])
def send_to_group(message):
    msg = message.text
    chat_id = -571655150
    bot.send_message(chat_id, msg)

@bot.callback_query_handler(func=lambda call: call.data.startswith("1-—ã–π —Ñ–∏–ª–∏–∞–ª") or call.data.startswith("2-–æ–π —Ñ–∏–ª–∏–∞–ª"))
def send_query(call):
    if call.data == "1-—ã–π —Ñ–∏–ª–∏–∞–ª":
        text = "<b>üìç —É–ª. –õ—å–≤–∞ –¢–æ–ª—Å—Ç–æ–≥–æ, 110 1 —ç—Ç–∞–∂</b>"
        link_to_gis = '[üìç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ 2GIS](https://go.2gis.com/lnbsu)'
        bot.send_message(call.message.chat.id, text, parse_mode="HTML")
        bot.send_message(call.message.chat.id, link_to_gis, parse_mode='MarkdownV2')
    elif call.data == "2-–æ–π —Ñ–∏–ª–∏–∞–ª":
        text = "<b>üìç —É–ª. –¢—É—Ä—É—Å–±–µ–∫–æ–≤–∞, 109</b>"
        link_to_gis = '[üìç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ 2GIS](https://go.2gis.com/ej6gh)'
        bot.send_message(call.message.chat.id, text, parse_mode="HTML")
        bot.send_message(call.message.chat.id, link_to_gis, parse_mode='MarkdownV2')

@bot.callback_query_handler(func=lambda call: call.data.startswith("kut_park")
                            or call.data.startswith("umut")
                            or call.data.startswith("ak_niet")
                            or call.data.startswith("kut_orgo"))
def send_request_room(call):
    if call.data == "kut_park":
        text = "<b>–ñ–ö –ö–£–¢ –ü–ê–†–ö</b> - —ç—Ç–æ –Ω–∞—à –≤–æ—Å—å–º–æ–π –æ–±—ä–µ–∫—Ç, –æ–Ω –±—É–¥–µ—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É <b>—É–ª. –ú–∞–Ω–∞—Å–∞/–í–∞—Å–∏–ª—å–µ–≤–∞</b>. \
               \n–ö–æ–º–ø–ª–µ–∫—Å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã—Ö –ø–ª–∞–Ω–∏—Ä–æ–≤–æ–∫ –æ—Ç 29 –¥–æ 80–º2.  \
               \n\n‚úî750 –∫–≤–∞—Ä—Ç–∏—Ä \
               \n‚úî18 –±–ª–æ–∫–æ–≤ \
                \n‚úî5 —ç—Ç–∞–∂–µ–π  \
                \n‚úî2,5 –≥–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è \
                \n‚úî–ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –æ—Ç 29–º2 –¥–æ 80–º2"
        photo_url = "https://kutstroy.kg/buildings/June2021/pfJ3NgxdJ8IXutUYxCJM.jpg"
    elif call.data == "umut":
        text = "<b>–ñ–ö –£–ú–£–¢</b> —ç—Ç–æ –Ω–∞—à –¥–µ–≤—è—Ç—ã–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É <b>–î–∂–∞–º–≥–µ—Ä—á–∏–Ω–æ–≤–∞ 291/–ü–∞—Ç—Ä–∏—Å–∞ –õ—É–º—É–º–±—ã.</b> \
                        \n–ö–æ–º–ø–ª–µ–∫—Å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞–º–∏ –æ—Ç \
                        \n\n‚úî672 –∫–≤–∞—Ä—Ç–∏—Ä \
                        \n‚úî10 –±–ª–æ–∫–æ–≤ \
                        \n‚úî9 —ç—Ç–∞–∂–µ–π \
                        \n‚úî2,5 –≥–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è \
                        \n–ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –æ—Ç 38-104–º2"
        photo_url = "https://kutstroy.kg/buildings/August2021/vZAkqM6yVotcIuIM0ZfG.jpg"
    elif call.data == "ak_niet":
        text = "<b>–ñ–ö –ê–ö –ù–ò–ï–¢</b> —ç—Ç–æ  –Ω–∞—à —Ç—Ä–µ—Ç–∏–π —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç—Ä–æ–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É <b>—É–ª.7 –∞–ø—Ä–µ–ª—è 1/1 (–ì–æ—Ä—å–∫–æ–≥–æ/–ê–ª–º–∞—Ç–∏–Ω–∫–∞)</b>. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –≤ –µ–≥–æ –æ–±–ª–µ–≥—á—ë–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è. –ö–æ–º–ø–ª–µ–∫—Å —Å–¥–∞—ë—Ç—Å—è –±–µ–∑ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Å—Ä–æ–∫–æ–º —Ä–∞—Å—Å—Ä–æ—á–∫–∏ –¥–æ 60 –º–µ—Å—è—Ü–µ–≤. \
                \n\n‚úîÔ∏è1300 –∫–≤–∞—Ä—Ç–∏—Ä \
                \n‚úîÔ∏è19 –±–ª–æ–∫–æ–≤ \
                \n‚úîÔ∏è10 —ç—Ç–∞–∂–µ–π \
                \n‚úîÔ∏è3 –≥–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è \
                \n‚úîÔ∏è–ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –æ—Ç 40–º2 –¥–æ 104–º2"
        photo_url = "https://kutstroy.kg/buildings/May2021/XDFcLDxdJfUqK2HHlHAD.jpg"
    elif call.data == "kut_orgo":
        text = "<b>–ñ–ö –ö–£–¢ ∆ü–†–ì∆ü</b> —ç—Ç–æ –Ω–∞—à –≤—Ç–æ—Ä–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç.  \
               –ö–æ–º–ø–ª–µ–∫—Å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Å–≤–æ–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è.  \
               –≠—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –ø—Ä–æ–¥–∞—ë—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞. –£–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–∞, —Ä–∞–∑—É–º–Ω—ã–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∏, –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ  \
               –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤–∞–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ. \
                \n\n‚úî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π: 10 \
                \n‚úî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤: 9 \
                \n‚úî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: 636 \
                \n‚úî–ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä –æ—Ç 30–º2 –¥–æ 126–º2"
        photo_url = "https://kutstroy.kg/buildings/December2020/FLau7BupcjeIxcPkrj2Q.jpg"
    bot.send_message(call.message.chat.id, text, parse_mode="HTML")
    bot.send_photo(call.message.chat.id, photo_url)
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–≤–∞—Ä—Ç–∏—Ä—É: "
    markup_in = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("1 –∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="one_room")
    btn2 = types.InlineKeyboardButton("2 –∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="two_rooms")
    btn3 = types.InlineKeyboardButton("3 –∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞", callback_data="three_rooms")
    markup_in.add(btn1, btn2, btn3)
    bot.send_message(call.message.chat.id, text, reply_markup=markup_in)


@bot.callback_query_handler(func=lambda call: call.data.startswith("one_room") or call.data.startswith("two_rooms")
                                              or call.data.startswith("three_rooms"))
def send_request_info(call):
    area1 = 42
    area2 = 64
    area3 = 80

    money1 = 550
    money2 = 600
    money3 = 650

    percentage1 = 30
    percentage2 = 25
    percentage3 = 23

    divide_by_month1 = 24
    divide_by_month2 = 36
    divide_by_month3 = 36
    if call.data == "one_room":
        text = "<b>1 –∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞</b>"\
                f"\n–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: {area1} –º2 \
                \n–°—Ç–æ–∏–º–æ—Å—Ç—å 1 –º2 = {money1}$ \
                \n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã: {area1 * money1}$ \
                \n–ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å: {percentage1}% –æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ = {area1 * money1 * percentage1/100}$ \
                \n–†–∞—Å—Å—Ä–æ—á–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü ({divide_by_month1}):  \
                {round(((area1 * money1) - (area1 * money1 * percentage1 / 100)) / divide_by_month1,2)} $"
        bot.send_message(call.message.chat.id, text, parse_mode="HTML")
    elif call.data == "two_rooms":
        text = "<b>2 –∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞</b>"\
                f"\n–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: {area2} –º2 \
                \n–°—Ç–æ–∏–º–æ—Å—Ç—å 1 –º2 = {money2}$ \
                \n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã: {area2 * money2}$ \
                \n–ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å: {percentage2}% –æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ = {area2 * money2 * percentage2 / 100}$ \
                \n–†–∞—Å—Å—Ä–æ—á–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü ({divide_by_month2}): \
                {round(((area2 * money2) - (area2 * money2 * percentage2 / 100)) / divide_by_month2,2)} $"
        bot.send_message(call.message.chat.id, text, parse_mode="HTML")
    elif call.data == "three_rooms":
        text = "<b>3 –∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞</b>"\
                f"\n–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: {area3} –º2 \
                \n–°—Ç–æ–∏–º–æ—Å—Ç—å 1 –º2 = {money3}$ \
                \n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã: {area3 * money3}$ \
                \n–ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å: {percentage3}% –æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ = {area3 * money3 * percentage3 / 100}$ \
                \n–†–∞—Å—Å—Ä–æ—á–∫–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü ({divide_by_month3}): \
                {round(((area3 * money3) - (area3 * money3 * percentage3 / 100)) / divide_by_month3,2)} $"
        bot.send_message(call.message.chat.id, text, parse_mode="HTML")
    text = "–ï—Å–ª–∏ –í–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç —É—Å–ª–æ–≤–∏—è, —Ç–æ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>'–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üìù'</b>"
    bot.send_message(call.message.chat.id, text, parse_mode = 'HTML')

bot.polling()